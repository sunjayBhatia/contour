name: Build and Test Pull Request

# Trigger the workflow on push or pull request
on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:
    types: [opened, synchronize]

env:
  GOPROXY: https://proxy.golang.org/
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  GO_VERSION: 1.19.5
jobs:
  # build-image:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
  #     with:
  #       version: latest
  #   - name: Build image
  #     env:
  #       TAG_LATEST: "false"
  #     run: |
  #       make multiarch-build
  #   - name: Upload image
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: image
  #       path: image/contour-*.tar
  #   - uses: act10ns/slack@v2
  #     with:
  #       status: ${{ job.status }}
  #       steps: ${{ toJson(steps) }}
  #       channel: '#contour-ci-notifications'
  #     if: ${{ failure() && github.ref == 'refs/heads/main' }}
  upgrade:
    runs-on: ubuntu-latest
    # needs: [build-image]
    strategy:
      matrix:
        # use stable kubernetes_version values since they're included
        # in the name of the GitHub Actions job, and we don't want to
        # have to update branch protection rules every time we change
        # a Kubernetes version number.
        kubernetes_version: ["kubernetes:latest", "kubernetes:n-1", "kubernetes:n-2"]
        # include defines an additional variable (the specific node
        # image to use) for each kubernetes_version value.
        include:
          - kubernetes_version: "kubernetes:latest"
            node_image: "docker.io/kindest/node:v1.26.0@sha256:691e24bd2417609db7e589e1a479b902d2e209892a10ce375fab60a8407c7352"
          - kubernetes_version: "kubernetes:n-1"
            node_image: "docker.io/kindest/node:v1.25.3@sha256:f52781bc0d7a19fb6c405c2af83abfeb311f130707a0e219175677e366cc45d1"
          - kubernetes_version: "kubernetes:n-2"
            node_image: "docker.io/kindest/node:v1.24.7@sha256:577c630ce8e509131eab1aea12c022190978dd2f745aac5eb1fe65c0807eb315"
    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch history for all tags and branches so we can figure out most
          # recent release tag.
          fetch-depth: 0
      # - name: Download image
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: image
      #     path: image
      - uses: actions/cache@v3
        with:
          # * Module download cache
          # * Build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-${{ github.job }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-go-
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: add deps to path
        run: |
          ./hack/actions/install-kubernetes-toolchain.sh $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      - name: upgrade tests
        env:
          NODEIMAGE: ${{ matrix.node_image }}
          MULTINODE_CLUSTER: "true"
          # LOAD_PREBUILT_IMAGE: "true"
        # run: |
        #   export CONTOUR_E2E_IMAGE="ghcr.io/projectcontour/contour:$(ls ./image/contour-*.tar | sed -E 's/.*contour-(.*).tar/\1/')"
        #   make upgrade
        run: |
          make upgrade
